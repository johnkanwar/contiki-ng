################################################################################
# SimpleLink MCU platform makefile

# Make sure path to Simplelink SDK is specified as absolute path
SIMPLELINK_SDK := $(abspath $(SIMPLELINK_SDK))

################################################################################
# Device Family

# The DeviceFamily.h file will always be available and can therefore be
# hard-coded.
DEVICE_FAMILY_H := $(SIMPLELINK_SDK)/source/ti/devices/DeviceFamily.h

# The define of the Device Family ID is on the format of either
#       #define DeviceFamily_ID_<device>        <number>
# or
#       #define DeviceFamily_ID_<device>        <sub-device-family-id>
# We are interested in the right-hand side of the define, i.e. the third word on the line,
# as it either defines a number or an another Device Family ID.
DEVICE_DEFINE := $(shell cat $(DEVICE_FAMILY_H) \
    | grep "\#define DeviceFamily_ID_$(SIMPLELINK_DEVICE_UC)\\b" \
    | awk '{print $$3}')

# If the define is a number, then the device family name is the resulting device name;
# Else, it points to a sub-name of the device family, e.g. DeviceFamily_ID_CC13X2_V1.
# This line checks if the extracted define is a number or not, based on this SO post:
#     https://stackoverflow.com/a/19116862/5099169
IS_NUMBER := $(shell if [ "$(DEVICE_DEFINE)" -eq "$(DEVICE_DEFINE)" ] 2>/dev/null; then echo 1 ; else echo 0 ; fi)

ifeq ($(IS_NUMBER),1)
# The define points to a number, meaning the device family name is the same as the
# specified device name in lower case, e.g.
#    cc13x2
DEVICE_FAMILY_NAME := $(SIMPLELINK_DEVICE_LC)
else
# The define points to a sub-name of the device family. The resulting device family name
# is therefore the name after specified after ID in lower case, e.g.
#    DeviceFamily_ID_CC13X2_V1
# will result in
#    cc13x2_v1
DEVICE_FAMILY_NAME := $(shell echo "$(DEVICE_DEFINE)" \
    | sed -E "s/DeviceFamily_ID_(.+)/\1/" \
    | tr A-Z a-z )
endif

# The DeviceFamily_constructPath() macro in DeviceFamily.h will always construct the
# correct path for device specific files. In this case, constructing the device specific
# root path. Note that the returned path is encased in angular brackets, <...>,
# and is therefore extracted with sed.
SDK_DEVICE_DIR := $(shell echo "DeviceFamily_constructPath(dummy)" \
    | gcc -x c -E -D$(DEVICE_FAMILY) -include $(DEVICE_FAMILY_H) - \
    | tail -1 \
    | sed -E "s:<(.+)/dummy>:\1:")

################################################################################
# Simplelink SDK paths

SDK_KERNEL := $(SIMPLELINK_SDK)/kernel/nortos
SDK_SOURCE := $(SIMPLELINK_SDK)/source
SDK_BOARDS := $(SDK_SOURCE)/ti/boards
SDK_DRIVERS := $(SDK_SOURCE)/ti/drivers
SDK_DEVICE := $(SDK_SOURCE)/$(SDK_DEVICE_DIR)

################################################################################
# Board and BSP selection
BOARD_TYPES = launchpad sensortag srf06

SIMPLELINK_BOARDS := $(foreach BOARD_TYPE,$(BOARD_TYPES),\
    $(shell ls -d $(PLATFORM_ROOT_DIR)/$(BOARD_TYPE)/*/ \
        | sed 's/.$$//' \
        | rev \
        | cut -d / -f -2 \
        | rev))

ifeq ($(filter $(SIMPLELINK_BOARD),$(SIMPLELINK_BOARDS)),)
  $(error Simplelink Board '$(SIMPLELINK_BOARD)' is not supported for Device '$(SIMPLELINK_DEVICE)')
endif

################################################################################
# Directory and source configurations

# Add to the source dirs
CONTIKI_TARGET_DIRS += .
CONTIKI_TARGET_DIRS += common
CONTIKI_TARGET_DIRS += $(shell echo $(dir $(SIMPLELINK_BOARD)) | sed 's:/$$::')

# Include the board-specific Makefile
include $(PLATFORM_ROOT_DIR)/$(SIMPLELINK_BOARD)/Makefile.$(notdir $(SIMPLELINK_BOARD))

CONTIKI_TARGET_SOURCEFILES += platform.c
CONTIKI_TARGET_SOURCEFILES += $(BOARD_SOURCEFILES)

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

# Define the CPU directory and pull in the correct CPU makefile. This will
# be defined by one of the makefiles included above and it can be either
# Makefile.cc26xx or Makefile.cc13xx
CONTIKI_CPU := $(CONTIKI)/arch/cpu/cc13xx-cc26xx
include $(CONTIKI_CPU)/Makefile.cc13x0-cc26x0

MODULES += os/net os/net/mac os/net/mac/framer

################################################################################
# Display all supported Boards for the given
simplelink_boards:
	@echo "$(SIMPLELINK_BOARDS) (current: $(SIMPLELINK_BOARD))"
