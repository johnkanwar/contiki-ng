# $Id: Makefile.cooja,v 1.42 2010/11/10 13:11:43 fros4943 Exp $

## The COOJA Simulator Contiki platform Makefile
##
## This makefile should normally never be called directly, but
## rather from inside the COOJA simulator.
## The purpose of this file is to compile a shared library that
## can be loaded into the Java part of COOJA.

ifndef CONTIKI
  $(error CONTIKI not defined!)
endif

### Assuming simulator quickstart if no JNI library name set from Cooja
ifndef LIBNAME
QUICKSTART=1
endif

### Quickstart simulator
ifdef QUICKSTART

# Create COOJA JAR rule
$(CONTIKI)/tools/cooja/dist/cooja.jar:
	@echo "Creating COOJA Java archive..."
	(cd $(CONTIKI)/tools/cooja && ant jar)

# Quickstart rule
ifneq ($(MAKECMDGOALS),clean)
.PHONY: $(MAKECMDGOALS)
.PRECIOUS: $(MAKECMDGOALS)
$(MAKECMDGOALS): $(CONTIKI)/tools/cooja/dist/cooja.jar
	 java -mx512m -jar $< -quickstart='$(firstword $(MAKECMDGOALS))' -contiki='$(CONTIKI)'
endif

endif ## QUICKSTART

#MAIN_SRC = $(OBJECTDIR)/$(LIBNAME).c
MAIN_OBJ = $(OBJECTDIR)/$(LIBNAME).o
ARCHIVE = $(OBJECTDIR)/$(LIBNAME).a
JNILIB = $(OBJECTDIR)/$(LIBNAME).$(TARGET)
CONTIKI_APP_OBJ = $(CONTIKI_APP).co

# Modules
MODULES += os/net os/net/mac os/net/mac/framer

## Copied from Makefile.include, since Cooja overrides CFLAGS et al
# Configure Network layer

MAKE_NET_NULLNET = 0
MAKE_NET_IPV6 = 1
MAKE_NET_OTHER = 2

# Make IPv6 the default stack
MAKE_NET ?= MAKE_NET_IPV6

ifeq ($(MAKE_NET),MAKE_NET_NULLNET)
  CFLAGS += -DNETSTACK_CONF_WITH_NULLNET=1
endif

ifeq ($(MAKE_NET),MAKE_NET_IPV6)
  CFLAGS += -DNETSTACK_CONF_WITH_IPV6=1
  MODULES += os/net/ipv6
else
  CFLAGS += -DNETSTACK_CONF_WITH_NULLNET=1
  MODULES += os/net/nullnet
endif

ifeq ($(MAKE_NET),MAKE_NET_OTHER)
  CFLAGS += -DNETSTACK_CONF_WITH_OTHER=1
endif

ifeq ($(WITH_IP64),1)
  MODULES += os/services/ip64
endif

# Configure Routing protocol
MAKE_ROUTING_NONE = 0
MAKE_ROUTING_RPL_CLASSIC = 1
MAKE_ROUTING_RPL_LITE = 2

# Default routing protocol: RPL for IPv6, None otherwise
ifeq ($(MAKE_NET),MAKE_NET_IPV6)
MAKE_ROUTING ?= MAKE_ROUTING_RPL_LITE
else
MAKE_ROUTING ?= MAKE_ROUTING_NONE
endif

ifeq ($(MAKE_ROUTING),MAKE_ROUTING_RPL_CLASSIC)
  CFLAGS += -DUIP_CONF_IPV6_RPL=1
  CFLAGS += -DUIP_CONF_IPV6_RPL_CLASSIC=1
  MODULES += os/net/rpl-classic
else ifeq ($(MAKE_ROUTING),MAKE_ROUTING_RPL_LITE)
  CFLAGS += -DUIP_CONF_IPV6_RPL=1
  CFLAGS += -DUIP_CONF_IPV6_RPL_LITE=1
  MODULES += os/net/rpl-lite
else
  CFLAGS += -DUIP_CONF_IPV6_RPL=0
endif

### COOJA platform sources
COOJA = $(CONTIKI)/arch/platform/$(TARGET)
CONTIKI_TARGET_DIRS = . dev lib sys cfs net

# (COOJA_SOURCEDIRS contains additional sources dirs set from simulator)
vpath %.c $(COOJA_SOURCEDIRS)

COOJA_BASE	= simEnvChange.c cooja_mt.c cooja_mtarch.c rtimer-arch.c slip.c watchdog.c

COOJA_INTFS	= beep.c button-sensor.c ip.c leds-arch.c moteid.c \
		    pir-sensor.c rs232.c vib-sensor.c \
		    clock.c cooja-log.c cfs-cooja.c cooja-radio.c \
			eeprom.c slip-arch.c

COOJA_CORE = random.c sensors.c leds.c

# (COOJA_SOURCEFILES contains additional sources set from simulator)
CONTIKI_TARGET_SOURCEFILES = \
$(COOJA_BASE) $(COOJA_INTFS) $(COOJA_CORE) $(COOJA_NET) $(COOJA_SOURCEFILES)

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

.SUFFIXES:

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI)/arch/cpu/x86

### Compiler arguments
#CC = gcc
CFLAGSNO = $(EXTRA_CC_ARGS) -Wall -g -I/usr/local/include -DCLASSNAME=$(CLASSNAME)
ifeq ($(WERROR),1)
CFLAGSNO += -Werror
endif
CFLAGS   += $(CFLAGSNO)
